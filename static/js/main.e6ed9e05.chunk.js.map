{"version":3,"sources":["webpack:///./src/App.css?7940","webpack:///./src/index.css?552e","index.css","App.css","containers/Menu/styles.ts","components/Input/styles.ts","components/Input/Input.tsx","store/actions/quiz.ts","store/actions/actionTypes.ts","store/actions/startPage.ts","components/UI/Spinner/styles.ts","components/UI/Spinner/Spinner.tsx","containers/Menu/Menu.tsx","components/Background/styles.ts","components/Background/Background.tsx","containers/Quiz/styles.ts","components/Question/styles.ts","components/Answer/styles.ts","components/Answer/Answer.tsx","components/Question/Question.tsx","components/UI/Arrow/styles.ts","components/UI/Arrow/Arrow.tsx","components/UI/Button/styles.ts","components/UI/Button/Button.tsx","components/Summary/styles.ts","components/Option/styles.ts","components/Option/Option.tsx","components/Summary/Summary.tsx","containers/Quiz/Quiz.tsx","App.tsx","store/reducers/quiz.ts","store/reducers/startPage.ts","index.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","root","App","StartPage","styled","div","_templateObject","Menu","_templateObject2","settingInputs","_templateObject3","quizerIntro","keyframes","_templateObject4","Title","h1","_templateObject5","SubTitle","_templateObject6","Button","Link","_templateObject7","Input","styles_templateObject","Select","select","styles_templateObject2","Option","option","styles_templateObject3","Label","styles_templateObject4","props","react_default","a","createElement","styles_Input","label","onChange","event","name","target","value","map","styles_Option","key","initQuiz","dispatch","getState","apiURL","startPage","settings","reset","fetchQuestionsStart","axios","get","then","response","fetchQuestionsSuccess","data","results","shuffleAnswers","quizStarted","catch","err","fetchQuestionsFail","type","questions","error","endQuiz","calculateScore","fetchCategoriesStart","fetchCategoriesSuccess","trivia_categories","categories","fetchCategoriesFail","lds_dual_ring","Spinner_styles_templateObject","Spinner","Spinner_styles_templateObject2","styles_Spinner","connect","_ref2","available","loading","init","generateURL","actions","changeSetting","setting","_ref","UI_Spinner_Spinner","styles_settingInputs","components_Input_Input","amount","category","obj","difficulty","useEffect","styles_StartPage","styles_Button","to","onClick","Background","Background_styles_templateObject","Icon","FontAwesomeIcon","Background_styles_templateObject2","quit","styles_Background","react_router_dom","icon","faHome","Quiz","Quiz_styles_templateObject","Questions","Quiz_styles_templateObject2","Question","Question_styles_templateObject","QuestionHeader","Question_styles_templateObject2","CategoryLabel","h3","Question_styles_templateObject3","AnswersContainer","Question_styles_templateObject4","Score","styles_templateObject5","Answer","Answer_styles_templateObject","isSelected","showAnswer","isCorrect","selected","answer","correct","ended","styles_Answer","children","quiz","Object","toConsumableArray","all","totalQuestions","correctAnswers","answers","questionsPicked","picked","finished","pickAnswer","index","newPick","questionId","id","question","correctAnswerId","selectedAnswerId","allAnswers","incorrect_answers","splice","correct_answer","header","concat","categoryLabel","scoreLabel","styles_Question","unescape","components_Answer_Answer","answerId","ArrowDirection","Arrow","Arrow_styles_templateObject","disable","direction","Left","faChevronLeft","faChevronRight","styles_Arrow","index_es","Button_styles_templateObject","Button_styles_Button","Summary","Summary_styles_templateObject","Container","Summary_styles_templateObject2","showoff","Summary_styles_templateObject3","Percentage","Summary_styles_templateObject4","h2","Summary_styles_templateObject5","OptionsContainer","styles_templateObject6","Option_styles_templateObject","Option_styles_templateObject2","link","Option_styles_Option","styles_Icon","percentage","score","max","styles_Summary","styles_Score","components_Option_Option","faBackward","faUndo","questionsAmount","started","quizFinished","dataLoading","fetching","isDataAvailable","dataFetched","end","_useState","useState","_useState2","slicedToArray","questionNumber","setQuestionNumber","buttonLabel","styles_Quiz","react_router","components_Summary_Summary","UI_Arrow_Arrow","console","log","components_Question_Question","Right","UI_Button_Button","routes","path","exact","component","className","styles","components_Background_Background","Component","initialState","reducer","state","arguments","length","action","objectSpread","shuffled","currentQuestion","answersAmmount","Math","floor","random","quizEnded","quizQuit","numberOfCorrectAnswers","reduce","prevV","currentV","round","settingsWithCategories","newSelectedSetting","defineProperty","setSetting","categoryID","find","indexOf","generateUrl","composeEnhancers","compose","rootReducer","combineReducers","quizReducer","startPageReducer","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById"],"mappings":"4EACA,IAAAA,EAAcC,EAAQ,IAEtB,kBAAAD,MAAA,EAA4CE,EAAAC,EAASH,EAAA,MAOrD,IAAAI,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEaP,EAAQ,GAARA,CAAwDD,EAAAI,GAErEJ,EAAAS,SAAAP,EAAAQ,QAAAV,EAAAS,gEChBA,IAAAT,EAAcC,EAAQ,IAEtB,kBAAAD,MAAA,EAA4CE,EAAAC,EAASH,EAAA,MAOrD,IAAAI,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEaP,EAAQ,GAARA,CAAwDD,EAAAI,GAErEJ,EAAAS,SAAAP,EAAAQ,QAAAV,EAAAS,6BCjBAC,EAAAR,EAAAQ,QAA2BT,EAAQ,GAARA,EAAoD,IAK/EU,KAAA,CAAcT,EAAAC,EAAS,+gBAA+hB,KAGtjBO,EAAAD,OAAA,CACAG,KAAA,gDCTAF,EAAAR,EAAAQ,QAA2BT,EAAQ,GAARA,EAAoD,IAK/EU,KAAA,CAAcT,EAAAC,EAAS,6TAA6T,KAGpVO,EAAAD,OAAA,CACAI,IAAA,kxDCNO,IAAMC,EAAYC,IAAOC,IAAVC,KAWTC,EAAOH,IAAOC,IAAVG,KAKJC,EAAgBL,IAAOC,IAAVK,KAMpBC,EAAcC,YAAHC,KAYJC,EAAQV,IAAOW,GAAVC,IAGDL,GAMJM,EAAWb,IAAOC,IAAVa,KAKRC,EAASf,YAAOgB,IAAPhB,CAAHiB,qeCjDZ,IAAOC,EAAQlB,IAAOC,IAAVkB,KAINC,EAASpB,IAAOqB,OAAVC,KAWNC,EAASvB,IAAOwB,OAAVC,KAINC,EAAQ1B,IAAOC,IAAV0B,KCSHT,EApBqB,SAAAU,GAKhC,OACAC,EAAAC,EAAAC,cAACC,EAAD,KACIH,EAAAC,EAAAC,cAACL,EAAD,KAAeE,EAAMK,OACrBJ,EAAAC,EAAAC,cAACX,EAAD,CAAec,SAPE,SAACC,GAClBP,EAAMM,SAASN,EAAMQ,KAAMD,EAAME,OAAOC,SAOnCV,EAAMvC,QAAQkD,IAAI,SAAAf,GAAM,OACrBK,EAAAC,EAAAC,cAACS,EAAD,CACIC,IAAKjB,EACLc,MAAOd,GACNA,yBCbRkB,EAAW,WACpB,OAAO,SAACC,EAA4CC,GAChD,IAAMC,EAASD,IAAWE,UAAUC,SAASF,OAC7CF,EAASK,KACTL,EAASM,KACTC,IAAMC,IAAIN,GACLO,KAAK,SAACC,GACHV,EAASW,EAAsBD,EAASE,KAAKC,YAEhDJ,KAAM,WACHT,EAASc,KACTd,EAASe,OAEZC,MAAM,SAACC,GACJjB,EAASkB,EAAmBD,QAK/BX,EAAsB,WAC/B,MAAO,CACHa,KCZ6B,0BDgBxBR,EAAwB,SAACC,GAClC,MAAO,CACHO,KCjB+B,0BDkB/BC,UAAWR,IAINM,EAAqB,SAACG,GAC/B,MAAO,CACHF,KCvB4B,uBDwB5BE,MAAOA,IAIFP,EAAiB,WAC1B,MAAO,CACHK,KC5BuB,oBDgClBJ,EAAc,WACvB,MAAO,CACHI,KCxCoB,iBDiEfG,EAAU,WACnB,MAAO,CACHH,KCzDkB,eD6DbI,EAAiB,WAC1B,MAAO,CACHJ,KC5DuB,oBDgElBd,EAAQ,WACjB,MAAO,CACHc,KChEkB,eCTbK,EAAuB,WAChC,MAAO,CACHL,KDpB8B,2BCwBzBM,EAAyB,SAACC,GACnC,MAAO,CACHP,KDzBgC,2BC0BhCQ,WAAYD,IAIPE,EAAsB,SAACP,GAChC,MAAO,CACHF,KD/B6B,wBCgC7BE,MAAOA,IAkBThB,GAAQ,WACV,MAAO,CACHc,KD9CwB,ymBEXhC,IAAMU,GAAgBhE,YAAHiE,MASNC,GAAU1E,IAAOC,IAAV0E,KAeHH,ICrBFE,GAFC,kBAAM7C,EAAAC,EAAAC,cAAC6C,GAAD,OC4EPC,eAjBS,SAAAC,GAAyC,IAAtChC,EAAsCgC,EAAtChC,UACvB,MAAO,CACHC,SAAUD,EAAUC,SAASgC,UAC7BC,QAASlC,EAAUkC,QACnBnC,OAAQC,EAAUC,SAASF,SAIR,SAACF,GACxB,MAAO,CACHsC,KAAM,kBAAMtC,EH9DT,SAACA,GACJA,EAASK,MACTL,EAASwB,KACTjB,IAAMC,IAAI,wCACLC,KAAK,SAACC,GACHV,EAASyB,EAAuBf,EAASE,KAAKc,sBAEjDV,MAAM,SAACC,GACJjB,EAAS4B,EAAoBX,SGuDrCsB,YAAa,kBAAMvC,EHrBhB,CACHmB,KD1CoB,kBI+DpBpB,SAAU,kBAAMC,EAASwC,MACzBC,cAAe,SAACC,EAAS/C,GAAV,OAAoBK,EHhCjB,SAAC0C,EAAiB/C,GACxC,MAAO,CACHwB,KDpCmB,cCqCnBuB,QAASA,EACT/C,MAAOA,GG4BqC6C,CAAmBE,EAAS/C,OAIjEuC,CArDoB,SAAAS,GAAqE,IAAnEL,EAAmEK,EAAnEL,KAAMlC,EAA6DuC,EAA7DvC,SAAUiC,EAAmDM,EAAnDN,QAASI,EAA0CE,EAA1CF,cAAeF,EAA2BI,EAA3BJ,YAAaxC,EAAc4C,EAAd5C,SAChFrC,GAA4B,IAAZ2E,EAAmBnD,EAAAC,EAAAC,cAACwD,GAAD,MACrC1D,EAAAC,EAAAC,cAACyD,EAAD,KACI3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAOrD,KAAK,SAASH,MAAM,iBAAiB5C,QAAS0D,EAAS2C,OAAQxD,SAAUkD,IAChFvD,EAAAC,EAAAC,cAAC0D,EAAD,CAAOrD,KAAK,WAAWH,MAAM,WAAW5C,QAAS0D,EAAS4C,SAASpD,IAAI,SAAAqD,GAAG,OAAIA,EAAIxD,OAAOF,SAAUkD,IACnGvD,EAAAC,EAAAC,cAAC0D,EAAD,CAAOrD,KAAK,OAAOH,MAAM,OAAO5C,QAAS0D,EAASe,KAAM5B,SAAUkD,IAClEvD,EAAAC,EAAAC,cAAC0D,EAAD,CAAOrD,KAAK,aAAaH,MAAM,aAAa5C,QAAS0D,EAAS8C,WAAY3D,SAAUkD,KAI5FU,oBAAU,WACNb,KACF,CAACA,IAOH,OACIpD,EAAAC,EAAAC,cAACgE,EAAD,KACIlE,EAAAC,EAAAC,cAAC5B,EAAD,KACI0B,EAAAC,EAAAC,cAACrB,EAAD,eACAmB,EAAAC,EAAAC,cAAClB,EAAD,KACIgB,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,qCAEH1B,GAELwB,EAAAC,EAAAC,cAACiE,EAAD,CAAeC,GAAG,QAAQC,QAfH,WAC3BhB,IACAxC,MAaI,uXCpDL,IAAMyD,GAAanG,IAAOC,IAAVmG,MAQVC,GAAOrG,YAAOsG,KAAPtG,CAAHuG,eCgBF1B,eAAQ,KANI,SAAClC,GACxB,MAAO,CACH6D,KAAM,kBAAM7D,EPsDT,CACHmB,KClDiB,iBMDVe,CAdqB,SAAAS,GAAA,IAAEkB,EAAFlB,EAAEkB,KAAF,OAChC3E,EAAAC,EAAAC,cAAC0E,GAAD,KACI5E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMT,GAAG,IAAIC,QAASM,GAClB3E,EAAAC,EAAAC,cAACsE,GAAD,CAAaM,KAAMC,qbCdxB,IAAMC,GAAO7G,IAAOC,IAAV6G,MAUJC,GAAY/G,IAAOC,IAAV+G,u2BCVf,IAAMC,GAAWjH,IAAOC,IAAViH,MAaRC,GAAiBnH,IAAOW,GAAVyG,MAIdC,GAAgBrH,IAAOsH,GAAVC,MAObC,GAAmBxH,IAAOC,IAAVwH,MAIhBC,GAAQ1H,IAAOC,IAAV0H,gQCtBX,IAAMC,GAAS5H,IAAOC,IAAV4H,KAKN,SAAAjG,GAAK,OAAIA,EAAMkG,YAAelG,EAAMmG,YAAcnG,EAAMoG,UAAa,QAAU,WAC1E,SAAApG,GAAK,OAAIA,EAAMkG,WACvBlG,EAAMmG,WACFnG,EAAMoG,UAAY,QAAU,MADhC,UAGApG,EAAMmG,YACFnG,EAAMoG,UAAY,QAClB,YCMCJ,GAfuB,SAAAtC,GAAiD,IAA/C2C,EAA+C3C,EAA/C2C,SAAU/B,EAAqCZ,EAArCY,QAASgC,EAA4B5C,EAA5B4C,OAAQC,EAAoB7C,EAApB6C,QAASC,EAAW9C,EAAX8C,MAKxE,OACAvG,EAAAC,EAAAC,cAACsG,GAAD,CACIC,SAAUJ,EACVJ,WAAYG,EACZD,UAAWG,EACXJ,WAAYK,EACZlC,QAVgB,WACZkC,GAAOlC,4BCuEJrB,eAhBS,SAAAS,GAAoC,IAAjCiD,EAAiCjD,EAAjCiD,KACvB,MAAO,CACHxE,UAAUyE,OAAAC,GAAA,EAAAD,CAAKD,EAAKxE,UAAU2E,KAC9BC,eAAgBJ,EAAKxE,UAAU2B,OAC/BkD,eAAeJ,OAAAC,GAAA,EAAAD,CAAKD,EAAKM,QAAQV,SACjCW,gBAAgBN,OAAAC,GAAA,EAAAD,CAAKD,EAAKM,QAAQE,QAClCX,MAAOG,EAAKS,WAIO,SAACrG,GACxB,MAAO,CACHsG,WAAY,SAACC,EAAOC,GAAR,OAAoBxG,EZnBd,SAACuG,EAAehB,GACtC,MAAO,CACHpE,KCtCmB,cDuCnBoF,MAAOA,EACPhB,OAAQA,GYeiC/C,CAAmB+D,EAAOC,OAI5DtE,CAzDmB,SAACjD,GAAU,IACjC+G,EAAsE/G,EAAtE+G,eAAgB5E,EAAsDnC,EAAtDmC,UAAW+E,EAA2ClH,EAA3CkH,gBAAiBF,EAA0BhH,EAA1BgH,eAAgBR,EAAUxG,EAAVwG,MAE9DgB,EAAaxH,EAAMyH,GAAK,EACxBC,EAAWvF,EAAUqF,GACrBG,EAAkBX,EAAeQ,GACjCI,EAAmBV,EAAgBM,GACnCK,EAAUjB,OAAAC,GAAA,EAAAD,CAAOc,EAASI,mBAChCD,EAAWE,OAAOJ,EAAiB,EAAGD,EAASM,gBAE/C,IAAMC,EAAM,YAAAC,OAAeV,EAAa,EAA5B,KAAAU,OAAiCnB,GACvCoB,EAAa,aAAAD,OAAgBR,EAAS3D,UACtCqE,EAAaT,IAAoBC,EAAmB,SAAW,WAMrE,OACI3H,EAAAC,EAAAC,cAACkI,GAAD,KACIpI,EAAAC,EAAAC,cAACoF,GAAD,KAAwB0C,GACxBhI,EAAAC,EAAAC,cAACsF,GAAD,KAAuB0C,GACvBlI,EAAAC,EAAAC,cAAA,SAAImI,KAASZ,EAASA,WACtBzH,EAAAC,EAAAC,cAACyF,GAAD,KACKiC,EAAWlH,IAAI,SAAC2F,EAAQ9I,GAAT,OACZyC,EAAAC,EAAAC,cAACoI,GAAD,CACI1H,IAAKrD,EACL8I,OAAQgC,KAAShC,GACjBD,SAAUuB,IAAqBpK,EAC/B8G,SAfMkE,EAeoBhL,EAdnC,kBAAMwC,EAAMqH,WAAWG,EAAYgB,KAe1BhC,MAAOA,EACPD,QAASoB,IAAoBnK,IAjBxB,IAACgL,KAqBhBhC,EACIvG,EAAAC,EAAAC,cAAC2F,GAAD,KAAesC,GADX,wJCxDf,ICDKK,GDCCC,GAAQtK,IAAOC,IAAVsK,KACL,SAAA3I,GAAK,OAAIA,EAAM4I,QAAU,qBAAuB,WAG/C,SAAA5I,GAAK,OAAIA,EAAM4I,QAAU,cAAgB,sBCL3CH,yDAUZ,IAgBeC,GAhBgB,SAAAhF,GAAoC,IAAlCmF,EAAkCnF,EAAlCmF,UAAWD,EAAuBlF,EAAvBkF,QAAStE,EAAcZ,EAAdY,QAE3CS,EADS8D,IAAcJ,GAAeK,KACtBC,KAAgBC,KAOtC,OACI/I,EAAAC,EAAAC,cAAC8I,GAAD,CAAc3E,QAPE,WACZsE,GACAtE,KAKgCsE,QAASA,GACzC3I,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,CAAiBnE,KAAMA,ydCxB5B,IAAM5F,GAASf,IAAOC,IAAV8K,MCcJhK,GARuB,SAAAa,GAClC,OACIC,EAAAC,EAAAC,cAACiJ,GAAD,CACI1C,SAAU1G,EAAMK,MAChBiE,QAAStE,EAAMsE,sgCCVpB,IAAM+E,GAAUjL,IAAOC,IAAViL,MAUPC,GAAYnL,IAAOC,IAAVmL,MAOhBC,GAAU7K,YAAH8K,MASAC,GAAavL,IAAOW,GAAV6K,KAINH,IAGJ3D,GAAQ1H,IAAOyL,GAAVC,MAILC,GAAmB3L,IAAOC,IAAV2L,qTCnCtB,IAAMrK,GAASvB,YAAOgB,IAAPhB,CAAH6L,MASNxF,GAAOrG,YAAOsG,KAAPtG,CAAH8L,MCOFvK,GATkB,SAAA+D,GAAkC,IAAhCqB,EAAgCrB,EAAhCqB,KAAMoF,EAA0BzG,EAA1ByG,KAAM9J,EAAoBqD,EAApBrD,MAAOiE,EAAaZ,EAAbY,QAClD,OACIrE,EAAAC,EAAAC,cAACiK,GAAD,CAAe/F,GAAI8F,EAAM7F,QAASA,GAC9BrE,EAAAC,EAAAC,cAACkK,GAAD,CAAatF,KAAMA,IACnB9E,EAAAC,EAAAC,cAAA,cAAME,EAAN,OC8CG4C,eAhBS,SAAAS,GAAkC,IAAhCiD,EAAgCjD,EAAhCiD,KACtB,MAAO,CACHS,SAAUT,EAAKS,SACfkD,WAAY3D,EAAK4D,MAAMD,WACvBC,MAAO5D,EAAK4D,MAAMhE,QAClBiE,IAAK7D,EAAKxE,UAAU2B,SAID,SAAC/C,GACxB,MAAO,CACH6D,KAAM,kBAAM7D,EpBqBT,CACHmB,KClDiB,emB6BjBpB,SAAU,kBAAMC,EAASwC,QAIlBN,CAvCkB,SAAAjD,GAS7B,OACAC,EAAAC,EAAAC,cAACsK,GAAD,KACIxK,EAAAC,EAAAC,cAACoJ,GAAD,KACItJ,EAAAC,EAAAC,cAACwJ,GAAD,KAAoB3J,EAAMsK,WAA1B,KACArK,EAAAC,EAAAC,cAACuK,GAAD,KAAe1K,EAAMuK,MAArB,IAA6BvK,EAAMwK,KACnCvK,EAAAC,EAAAC,cAAC4J,GAAD,KACI9J,EAAAC,EAAAC,cAACwK,GAAD,CAAQR,KAAM,QAASpF,KAAM6F,KAAYvK,MAAM,WAC/CJ,EAAAC,EAAAC,cAACwK,GAAD,CAAQR,KAAM,QAASpF,KAAM8F,KAAQxK,MAAM,YAAYiE,QAftC,WACzBtE,EAAMc,cAeEb,EAAAC,EAAAC,cAACwK,GAAD,CAAQR,KAAM,IAAKpF,KAAMC,KAAQ3E,MAAM,OAAOiE,QAZjC,WACrBtE,EAAM4E,eC+DC3B,eAjBS,SAAAS,GAA+C,IAA5CiD,EAA4CjD,EAA5CiD,KAAMzF,EAAsCwC,EAAtCxC,UAC7B,MAAO,CACH4J,gBAAiBnE,EAAKxE,UAAU2B,OAChChC,YAAa6E,EAAKoE,QAClBC,aAAcrE,EAAKS,SACnBZ,MAAOG,EAAKS,SACZ6D,YAAatE,EAAKxE,UAAU+I,SAC5BC,gBAAiBjK,EAAUkK,cAIR,SAACrK,GACxB,MAAO,CACHsK,IAAK,kBAAMtK,ErBjBR,SAACA,GACJA,EAASuB,KACTvB,EAASsB,UqBmBFY,CA7De,SAAAjD,GAAS,IAAAsL,EACQC,mBAAS,GADjBC,EAAA5E,OAAA6E,GAAA,EAAA7E,CAAA0E,EAAA,GAC5BI,EAD4BF,EAAA,GACbG,EADaH,EAAA,GAE7BpI,IAAYpD,EAAM8B,aAAe9B,EAAMgL,eAAiBhL,EAAMiL,YAC9DW,EAAc5L,EAAMwG,MAAQ,aAAe,SAkBjD,OACIvG,EAAAC,EAAAC,cAAC0L,GAAD,KACM7L,EAAMmL,gBAAwC,KAAtBlL,EAAAC,EAAAC,cAAC2L,GAAA,EAAD,CAAUzH,GAAG,MACrCrE,EAAMwG,MAcFvG,EAAAC,EAAAC,cAAC4L,GAAD,MAbA9L,EAAAC,EAAAC,cAACgF,GAAD,KACElF,EAAAC,EAAAC,cAAC6L,GAAD,CACIpD,QAAS8C,GAAkB,EAC3B7C,UAAWJ,GAAeK,KAC1BxE,QAbO,WACvBqH,EAAkBD,EAAiB,GACnCO,QAAQC,IAAI,iBAAiBR,MAYftI,EACInD,EAAAC,EAAAC,cAACwD,GAAD,MACA1D,EAAAC,EAAAC,cAACgM,GAAD,CAAU1E,GAAIiE,IACpBzL,EAAAC,EAAAC,cAAC6L,GAAD,CACIpD,QAAS8C,GAAkB1L,EAAM8K,gBACjCjC,UAAWJ,GAAe2D,MAC1B9H,QAzBO,WACvBqH,EAAkBD,EAAiB,GACnCO,QAAQC,IAAI,iBAAiBR,OA0BzBzL,EAAAC,EAAAC,cAACkM,GAAD,CAAQhM,MAAOuL,EAAatH,QAlCV,WAClBtE,EAAMwG,OACNxG,EAAMqL,YCbHnN,oLAfX,IAAMoO,EACJrM,EAAAC,EAAAC,cAAC2L,GAAA,EAAD,KACE7L,EAAAC,EAAAC,cAAC2L,GAAA,EAAD,CAAOS,KAAK,QAAQC,OAAK,EAACC,UAAWxH,KACrChF,EAAAC,EAAAC,cAAC2L,GAAA,EAAD,CAAOS,KAAK,IAAIC,OAAK,EAACC,UAAWlO,KACjC0B,EAAAC,EAAAC,cAAC2L,GAAA,EAAD,CAAUzH,GAAG,OAGjB,OACEpE,EAAAC,EAAAC,cAAA,OAAKuM,UAAWC,OACd1M,EAAAC,EAAAC,cAACyM,GAAD,MACCN,UAZSO,uCCsBZC,GAA0B,CAC5B/B,SAAS,EACT3D,UAAU,EACVjF,UAAW,CACP2E,IAAK,CAAC,CACF/C,SAAU,6BACV7B,KAAM,WACN+B,WAAY,OACZyD,SAAU,0EACVM,eAAgB,KAChBF,kBAAmB,CAAC,KAAM,KAAM,QAEpChE,OAAQ,EACRoH,UAAU,GAEdjE,QAAS,CACLV,QAAS,CAAC,GACVY,OAAQ,EAAE,IAEdoD,MAAO,CACHD,YAAa,EACb/D,QAAS,IA4EFwG,GAhBC,WAAqE,IAApEC,EAAoEC,UAAAC,OAAA,QAAArP,IAAAoP,UAAA,GAAAA,UAAA,GAA5DH,GAAcK,EAA8CF,UAAAC,OAAA,EAAAD,UAAA,QAAApP,EACjF,OAAQsP,EAAOjL,MACX,ItB7F6B,wBsB6FW,OA1CpB,SAAC8K,EAAkBG,GAC3C,OAAOvG,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB7K,UAAUyE,OAAAwG,GAAA,EAAAxG,CAAA,GAAMoG,EAAM7K,UAAb,CAAwB+I,UAAU,MAyCX7J,CAAoB2L,GACnE,ItB7F+B,0BsB6FW,OAvCpB,SAACA,EAAkBG,GAC7C,OAAOvG,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB7K,UAAUyE,OAAAwG,GAAA,EAAAxG,CAAA,GAAMoG,EAAM7K,UAAb,CAAwB2E,IAAKqG,EAAOhL,UAAW+I,UAAU,EAAOpH,OAAQqJ,EAAOhL,UAAU+K,WAsChExL,CAAsBsL,EAAOG,GAC9E,ItB7F4B,uBsB6FW,OApCpB,SAACH,EAAkBG,GAE1C,OADAlB,QAAQC,IAAIiB,EAAO/K,OACZwE,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB7K,UAAUyE,OAAAwG,GAAA,EAAAxG,CAAA,GAAMoG,EAAM7K,UAAb,CAAwB+I,UAAU,MAkCZjJ,CAAmB+K,EAAOG,GACxE,ItBlGoB,esBkGW,OAhCnB,WAAkC,IAAjCH,EAAiCC,UAAAC,OAAA,QAAArP,IAAAoP,UAAA,GAAAA,UAAA,GAAzBH,GACzB,OADkDG,UAAAC,OAAA,GAAAD,UAAA,GAC3CrG,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB7K,UAAUyE,OAAAwG,GAAA,EAAAxG,CAAA,GAAMoG,EAAM7K,WAAa4I,SAAS,EAAMR,MAAO,CAAED,YAAa,EAAG/D,QAAS,KA+B7DzE,CAAYkL,EAAOG,GACzD,ItB7FuB,kBsB6FW,OA9DnB,SAACH,EAAkBG,GAAW,IACzChL,EAAc6K,EAAd7K,UACJkL,EAAkB,GACtB,IAAK,IAAM3F,KAAYvF,EAAU2E,IAAK,CAClC,IAAMwG,EAAkBnL,EAAU2E,IAAIY,GAChC6F,EAAiBD,EAAgBxF,kBAAkBoF,OAAS,EAC5B,IAAnBK,EAEfF,EAASrP,KAAwC,SAAnCsP,EAAgBtF,eAA4B,EAAI,GAE9DqF,EAASrP,KAAKwP,KAAKC,MAAMD,KAAKE,SAAWH,IAGjD,OAAO3G,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB/F,QAAS,CAAEV,QAAS8G,EAAUlG,OAAQkG,EAAS1M,IAAI,kBAAO,OAiDhCkB,CAAemL,GACxD,ItB5FmB,csB4FW,OA9BnB,SAACA,EAAOG,GAEvB,OADAH,EAAM/F,QAAQE,OAAOgG,EAAO7F,OAAS6F,EAAO7G,OACrCM,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,GA4B6B3F,CAAW2F,EAAOG,GACvD,ItB3FkB,asB2FW,OA1BnB,SAACH,EAAOG,GACtB,OAAOvG,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB5F,UAAU,EAAM2D,SAAS,EAAO5I,UAAUyE,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAM7K,aAyBhCwL,CAAUX,GAC9C,ItB3FiB,YsB2FW,OAvBnB,SAACA,EAAOG,GACrB,OAAOvG,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB5F,UAAU,EAAO2D,SAAS,IAsBN6C,CAASZ,GAC5C,ItB1FuB,kBsB0FW,OApBnB,SAACA,EAAkBG,GACtC,IAAMU,EAAyBb,EAAM/F,QAAQV,QAAQuH,OAAO,SAACC,EAAOC,EAAU1G,GAAlB,OAA4B0G,IAAahB,EAAM/F,QAAQE,OAAOG,GAASyG,EAAQ,EAAIA,GAAO,GAChJzD,EAAakD,KAAKS,MAAOJ,EAAyBb,EAAM7K,UAAU2B,OAAU,KAClF,OAAO8C,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmBzC,MAAO,CAAED,WAAYA,EAAY/D,QAASsH,KAiBhBvL,CAAe0K,GACxD,ItBzFkB,asByFW,OAd1BF,GAeH,QAAS,OAAOE,aC/FlBF,GAA+B,CACjC1J,SAAS,EACTgI,aAAa,EACbjK,SAAU,CACNgC,UAAW,CACPW,OAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,MAChCC,SAAU,CACN,CACIvD,KAAM,eACNiH,GAAI,IAGZxD,WAAY,CAAC,iBAAkB,OAAQ,SAAU,QACjD/B,KAAM,CAAC,WAAY,kBAAmB,iBAE1CmE,SAAU,CACNvC,OAAQ,IACRC,SAAU,eACVE,WAAY,iBACZ/B,KAAM,YAEVjB,OAAQ,uEA8DD8L,GAZC,WAAgF,IAA/EC,EAA+EC,UAAAC,OAAA,QAAArP,IAAAoP,UAAA,GAAAA,UAAA,GAAvEH,GAAcK,EAAyDF,UAAAC,OAAA,EAAAD,UAAA,QAAApP,EAC5F,OAAQsP,EAAOjL,MACX,IvB/F8B,yBuB+FW,OAhDpB,SAAC8K,EAAuBG,GACjD,OAAOvG,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB5J,SAAS,IA+CwBb,CAAqByK,GACrE,IvB/FgC,2BuB+FW,OA7CpB,SAACA,EAAuBG,GACnD,IAAMe,EACN,CACI/M,SAASyF,OAAAwG,GAAA,EAAAxG,CAAA,GACFoG,EAAM7L,SADL,CAEJgC,UAAUyD,OAAAwG,GAAA,EAAAxG,CAAA,GACHoG,EAAM7L,SAASgC,UADb,CAELY,SAAU,CAAC,CAACvD,KAAM,eAAeiH,GAAI,IAAIS,OAAOiF,EAAOzK,iBAInE,OAAOkE,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB5J,SAAS,GAAU8K,EAAtC,CAA8D9C,aAAa,IAkCrB5I,CAAuBwK,EAAOG,GAChF,IvB/F6B,wBuB+FW,OAhCpB,SAACH,EAAuBG,GAGhD,OAFAlB,QAAQC,IAAI,wBACZD,QAAQC,IAAIiB,EAAO/K,OACZwE,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB5J,SAAS,IA6BuBT,CAAoBqK,EAAOG,GAC1E,IvB9FmB,cuB8FW,OA1BnB,SAACH,EAAuBG,GACvC,IAAMgB,EAAkBvH,OAAAwG,GAAA,EAAAxG,CAAA,GACjBoG,EAAM7L,SAASkF,SADEO,OAAAwH,GAAA,EAAAxH,CAAA,GAEnBuG,EAAO1J,QAAU0J,EAAOzM,QAE7B,OAAOkG,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAZ,CAAmB7L,SAASyF,OAAAwG,GAAA,EAAAxG,CAAA,GAAMoG,EAAM7L,SAAb,CAAuBkF,SAASO,OAAAwG,GAAA,EAAAxG,CAAA,GAAMuH,OAqBxBE,CAAWrB,EAAOG,GACvD,IvB7FoB,euB6FW,OAfnB,SAACH,EAAuBG,GACxC,IAAMmB,EAAatB,EAAM7L,SAASgC,UAAUY,SAASwK,KAAK,SAAAxK,GAAQ,OAAIA,EAASvD,OAASwM,EAAM7L,SAASkF,SAAStC,WAAW0D,GACrH3D,EAASkJ,EAAM7L,SAASkF,SAASvC,OACjCG,EAAa,CAAC,IAAK,OAAQ,SAAU,QAAQ+I,EAAM7L,SAASgC,UAAUc,WAAWuK,QAAQxB,EAAM7L,SAASkF,SAASpC,aACjH/B,EAAO,CAAC,IAAI,WAAW,WAAW8K,EAAM7L,SAASgC,UAAUjB,KAAKsM,QAAQxB,EAAM7L,SAASkF,SAASnE,OAChGjB,EAAM,sCAAAiH,OAAyCpE,EAAzC,cAAAoE,OAA4DoG,EAA5D,UAAApG,OAA+EhG,EAA/E,eAAAgG,OAAiGjE,GAC7G,OAAO2C,OAAAwG,GAAA,EAAAxG,CAAA,GAAIoG,EAAX,CAAkB7L,SAASyF,OAAAwG,GAAA,EAAAxG,CAAA,GAAKoG,EAAM7L,SAAZ,CAAsBF,OAAQA,MASdwN,CAAYzB,GAClD,IvB5FwB,mBuB4FW,OAnBhCF,GAoBH,QAAS,OAAOE,ICzFlB0B,GAEIC,KAEJC,GAAcC,aAAgB,CAChClI,KAAMmI,GACN5N,UAAW6N,KAGTC,GAAQC,aAAYL,GAAaF,GACnCQ,aAAgBC,QAGdC,GACFnP,EAAAC,EAAAC,cAACkP,EAAA,EAAD,CAAUL,MAAOA,IACb/O,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,KACI7E,EAAAC,EAAAC,cAACmP,GAAD,QAKZC,IAASC,OAAOJ,GAAKK,SAASC,eAAe","file":"static/js/main.e6ed9e05.chunk.js","sourcesContent":["\nvar content = require(\"!!../node_modules/typings-for-css-modules-loader/lib/index.js??ref--6-oneOf-3-1!./App.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/typings-for-css-modules-loader/lib/index.js??ref--6-oneOf-3-1!./App.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/typings-for-css-modules-loader/lib/index.js??ref--6-oneOf-3-1!./App.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../node_modules/typings-for-css-modules-loader/lib/index.js??ref--6-oneOf-3-1!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/typings-for-css-modules-loader/lib/index.js??ref--6-oneOf-3-1!./index.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/typings-for-css-modules-loader/lib/index.js??ref--6-oneOf-3-1!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\nbody {\\n  \\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\",\\n    \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\",\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n#_1YYU_vdtEoCzbtmk8tBvTU {\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \\\"Courier New\\\",\\n    monospace;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"root\": \"_1YYU_vdtEoCzbtmk8tBvTU\"\n};","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"._3Ge-CIdMbROGJFA06DTnds {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n  padding: 0;  \\n  text-align: center;\\n  display: flex;\\n  justify-content: center;\\n  align-content: center;\\n  position: absolute;\\n  \\n  font-family: 'Roboto', sans-serif;\\n  font-weight: 400;\\n\\n  color: #02283B;\\n  color: #125271;\\n}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"App\": \"_3Ge-CIdMbROGJFA06DTnds\"\n};","import styled, { keyframes } from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StartPage = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    align-self: center;\r\n    height: 50%;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Menu = styled.div`\r\n    width: 100%;\r\n    background: white;\r\n`;\r\n\r\nexport const settingInputs = styled.div`\r\n    margin: 50px 0;\r\n    display: flex;    \r\n    width: 100%;\r\n`;\r\n\r\nconst quizerIntro = keyframes`\r\n    0% {\r\n        transform: scale(0, 0) rotate(0deg);\r\n    }\r\n    60% {\r\n        transform: scale(1.25, 1.25) rotate(360deg) skew(-15deg);\r\n    }\r\n    100% {\r\n        transform: scale(1.15, 1.25) rotate(355deg) skew(-10deg);\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    margin: 20px 0;\r\n    font-size: 6rem;\r\n    animation: ${quizerIntro} 0.4s 0.5s ease-out forwards;\r\n    background: none;\r\n    color: #125271;\r\n    transform: scale(0, 0);\r\n`;\r\n\r\nexport const SubTitle = styled.div`\r\n    color: #B3D8E9;\r\n    color: #5B99B7;\r\n`;\r\n\r\nexport const Button = styled(Link)`\r\n    color: inherit;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    background: white;\r\n    padding: 20px 50px;    \r\n    border-radius: 25px;\r\n    font-weight: bold;\r\n    font-size: 2rem;\r\n    box-shadow: 2px 2px 10px 2px rgba(0,0,0,0.25);\r\n    transition: transform 0.25s;\r\n    margin: 2rem;\r\n    :hover {\r\n        transform: scale(1.2,1.2);    \r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const  Input = styled.div`\r\n    flex: 1;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    cursor: pointer;\r\n    width: 80%;\r\n    text-align: center;\r\n    color:inherit;\r\n    border-radius: 5px;\r\n    :focus{\r\n        outline: 0;\r\n    }\r\n`;\r\n\r\nexport const Option = styled.option`\r\n    text-align: center;\r\n`\r\n\r\nexport const Label = styled.div`\r\n`","import React from 'react';\r\nimport * as styled from './styles';\r\n\r\ninterface InputProps {\r\n    label: string,\r\n    name: string,\r\n    options: [],\r\n    onChange: (setting: string, value: string) => void,\r\n}\r\n\r\nconst Input: React.FC<InputProps> = props => {\r\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement> ) => {\r\n        props.onChange(props.name, event.target.value)\r\n    };\r\n\r\n    return (\r\n    <styled.Input>\r\n        <styled.Label>{props.label}</styled.Label>\r\n        <styled.Select onChange={handleChange}>\r\n            {props.options.map(option =>\r\n                <styled.Option\r\n                    key={option}\r\n                    value={option}>\r\n                    {option}\r\n                </styled.Option>)}\r\n        </styled.Select>\r\n    </styled.Input>\r\n)}\r\n\r\n\r\nexport default Input;","import * as actionTypes from './actionTypes';\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { Dispatch } from 'react';\r\nimport { Question } from '../reducers/quiz';\r\nimport { AppState } from \"~/index\"; \r\n\r\ninterface CategoriesServerData {\r\n    results: Question[];\r\n};\r\n\r\nexport const initQuiz = () => {\r\n    return (dispatch: Dispatch<actionTypes.AllActions>, getState: () => AppState ) => {\r\n        const apiURL = getState().startPage.settings.apiURL;\r\n        dispatch(reset());\r\n        dispatch(fetchQuestionsStart());\r\n        axios.get(apiURL)\r\n            .then((response: AxiosResponse<CategoriesServerData>) => {\r\n                dispatch(fetchQuestionsSuccess(response.data.results));                \r\n            })\r\n            .then( () => {\r\n                dispatch(shuffleAnswers());\r\n                dispatch(quizStarted())\r\n            })\r\n            .catch((err: AxiosError) => {                \r\n                dispatch(fetchQuestionsFail(err))\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchQuestionsStart = (): actionTypes.fetchQuestionsStart => {\r\n    return {\r\n        type: actionTypes.FETCH_QUESTIONS_START,\r\n    }\r\n}\r\n\r\nexport const fetchQuestionsSuccess = (data): actionTypes.fetchQuestionsSuccess => {    \r\n    return {\r\n        type: actionTypes.FETCH_QUESTIONS_SUCCESS,\r\n        questions: data,\r\n    }\r\n}\r\n\r\nexport const fetchQuestionsFail = (error: AxiosError): actionTypes.fetchQuestionsFail<AxiosError> => {\r\n    return {\r\n        type: actionTypes.FETCH_QUESTIONS_FAIL,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const shuffleAnswers = (): actionTypes.shuffleAnswers => {\r\n    return {\r\n        type: actionTypes.SHUFFLE_ANSWERS,\r\n    }\r\n}\r\n\r\nexport const quizStarted = (): actionTypes.quizStarted => {\r\n    return {\r\n        type: actionTypes.QUIZ_STARTED,\r\n    }\r\n}\r\n\r\nexport const pickAnswer = (index: number, answer: number): actionTypes.pickAnswer => {\r\n    return {\r\n        type: actionTypes.PICK_ANSWER,\r\n        index: index,\r\n        answer: answer,\r\n    }\r\n}\r\n\r\nexport const quizEnded = (): Dispatch<Dispatch<actionTypes.QuizActions>> => {\r\n    return (dispatch: Dispatch<actionTypes.QuizActions>) => {\r\n        dispatch(calculateScore());\r\n        dispatch(endQuiz());        \r\n    }\r\n}\r\n\r\nexport const quizQuit = (): actionTypes.quizQuit  => {\r\n    return {\r\n        type: actionTypes.QUIZ_QUIT,      \r\n    }\r\n}\r\n\r\nexport const endQuiz = (): actionTypes.endQuiz => {\r\n    return {\r\n        type: actionTypes.QUIZ_ENDED,\r\n    }\r\n}\r\n\r\nexport const calculateScore = (): actionTypes.calculateScore => {\r\n    return {\r\n        type: actionTypes.CALCULATE_SCORE,\r\n    }\r\n}\r\n\r\nexport const reset = (): actionTypes.resetQuiz => {\r\n    return {\r\n        type: actionTypes.RESET_QUIZ,\r\n    }\r\n}","import { Category } from \"../reducers/startPage\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport const INIT = 'INIT';\r\n\r\nexport const FETCH_CATEGORIES_START = 'FETCH_CATEGORIES_START';\r\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\r\nexport const FETCH_CATEGORIES_FAIL = 'FETCH_CATEGORIES_FAIL';\r\n\r\nexport const SET_SETTING = 'SET_SETTING';\r\n\r\nexport const GENERATE_URL = 'GENERATE_URL';\r\n\r\nexport const RESET_START_PAGE = 'RESET_START_PAGE';\r\n\r\n// ----------------------------\r\n\r\nexport const QUIZ_STARTED = 'QUIZ_STARTED';\r\n\r\nexport const FETCH_QUESTIONS_START = 'FETCH_QUESTIONS_START';\r\nexport const FETCH_QUESTIONS_SUCCESS = 'FETCH_QUESTIONS_SUCCESS';\r\nexport const FETCH_QUESTIONS_FAIL = 'FETCH_QUESTIONS_FAIL';\r\n\r\nexport const SHUFFLE_ANSWERS = 'SHUFFLE_ANSWERS';\r\n\r\nexport const PICK_ANSWER = 'PICK_ANSWER';\r\n\r\nexport const QUIZ_ENDED = 'QUIZ_ENDED';\r\nexport const QUIZ_QUIT = 'QUIZ_QUIT';\r\n\r\nexport const CALCULATE_SCORE = 'CALCULATE_SCORE';\r\n\r\nexport const RESET_QUIZ = \"RESET_QUIZ\";\r\n\r\n// ----------------------------\r\n\r\nexport interface fetchQuestionsStart {\r\n    type: typeof FETCH_QUESTIONS_START,\r\n}\r\n\r\nexport interface fetchQuestionsSuccess {\r\n    type: typeof FETCH_QUESTIONS_SUCCESS,\r\n    questions: string,\r\n}\r\n\r\nexport interface fetchQuestionsFail<T> {\r\n    type: typeof FETCH_QUESTIONS_FAIL,\r\n    error: T,\r\n}\r\n\r\nexport interface shuffleAnswers {\r\n    type: typeof SHUFFLE_ANSWERS,\r\n}\r\n\r\nexport interface quizStarted {\r\n    type: typeof QUIZ_STARTED,\r\n}\r\n\r\nexport interface pickAnswer {\r\n    type: typeof PICK_ANSWER,\r\n    index: number,\r\n    answer: number,\r\n}\r\n\r\nexport interface endQuiz {\r\n    type: typeof QUIZ_ENDED,\r\n}\r\n\r\nexport interface quizQuit {\r\n    type: typeof QUIZ_QUIT,\r\n}\r\n\r\nexport interface calculateScore {\r\n    type: typeof CALCULATE_SCORE,\r\n}\r\n\r\nexport interface resetQuiz {\r\n    type: typeof RESET_QUIZ,\r\n}\r\n\r\nexport type QuizActions = fetchQuestionsStart | fetchQuestionsSuccess | fetchQuestionsFail<any> | shuffleAnswers |\r\nquizStarted | pickAnswer | endQuiz | quizQuit | calculateScore | resetQuiz;\r\n\r\n// ----------------------------\r\n\r\nexport interface init extends Dispatch { }\r\n\r\nexport interface fetchCategoriesStart {\r\n    type: typeof FETCH_CATEGORIES_START,\r\n}\r\n\r\nexport interface fetchCategoriesSuccess {\r\n    type: typeof FETCH_CATEGORIES_SUCCESS,\r\n    categories: Category[],\r\n}\r\n\r\nexport interface fetchCategoriesFail<T> {\r\n    type: typeof FETCH_CATEGORIES_FAIL,\r\n    error: T,\r\n}\r\n\r\nexport interface setSetting {\r\n    type: typeof SET_SETTING,\r\n    setting: string,\r\n    value: string,\r\n}\r\n\r\nexport interface generateURL {\r\n    type: typeof GENERATE_URL,\r\n}\r\n\r\nexport interface resetStartPage {\r\n    type: typeof RESET_START_PAGE,\r\n}\r\n\r\nexport type StartPageActions = fetchCategoriesStart | fetchCategoriesSuccess | fetchCategoriesFail<any> | setSetting | generateURL | resetStartPage;\r\n\r\n\r\nexport type AllActions = QuizActions | StartPageActions;","import { Category } from '../reducers/startPage';\r\nimport * as actionTypes from './actionTypes';\r\nimport axios, { AxiosResponse, AxiosError } from 'axios';\r\nimport { Dispatch } from 'redux';\r\n\r\ninterface CategoriesServerData {\r\n    trivia_categories: Category[];\r\n}\r\n\r\nexport const init = () => {\r\n    return (dispatch: Dispatch<actionTypes.StartPageActions>) => {\r\n        dispatch(reset());\r\n        dispatch(fetchCategoriesStart());\r\n        axios.get('https://opentdb.com/api_category.php')\r\n            .then((response: AxiosResponse<CategoriesServerData>) => {\r\n                dispatch(fetchCategoriesSuccess(response.data.trivia_categories))\r\n            })\r\n            .catch((err: AxiosError) => {\r\n                dispatch(fetchCategoriesFail(err))\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchCategoriesStart = (): actionTypes.fetchCategoriesStart => {\r\n    return {\r\n        type: actionTypes.FETCH_CATEGORIES_START,\r\n    }\r\n}\r\n\r\nexport const fetchCategoriesSuccess = (trivia_categories: Category[]): actionTypes.fetchCategoriesSuccess => {\r\n    return {\r\n        type: actionTypes.FETCH_CATEGORIES_SUCCESS,\r\n        categories: trivia_categories,\r\n    }\r\n}\r\n\r\nexport const fetchCategoriesFail = (error: AxiosError): actionTypes.fetchCategoriesFail<AxiosError> => {\r\n    return {\r\n        type: actionTypes.FETCH_CATEGORIES_FAIL,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const setSetting = (setting: string, value: string): actionTypes.setSetting => {\r\n    return {\r\n        type: actionTypes.SET_SETTING,\r\n        setting: setting,\r\n        value: value,\r\n    }\r\n}\r\n\r\nexport const generateURL = (): actionTypes.generateURL => {\r\n    return {\r\n        type: actionTypes.GENERATE_URL,\r\n    }\r\n}\r\n\r\nconst reset = (): actionTypes.resetStartPage => {\r\n    return {\r\n        type: actionTypes.RESET_START_PAGE,\r\n    }\r\n}","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst lds_dual_ring = keyframes`\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n  display: flex;\r\n  width: 64px;\r\n  height: 64px;\r\n  margin: 36px auto;\r\n  \r\n  :after {\r\n    content: \" \";\r\n    display: block;\r\n    width: 46px;\r\n    height: 46px;\r\n    margin: 1px;\r\n    border-radius: 50%;\r\n    border: 5px solid #125271;\r\n    border-color: #125271 transparent #125271 transparent;\r\n    animation: ${lds_dual_ring} 1.2s linear infinite;\r\n  }\r\n`;","import React from 'react';\r\nimport * as styled from './styles'\r\n\r\nconst Spinner = () => <styled.Spinner/>\r\n\r\nexport default Spinner;","import React, { useEffect } from 'react';\r\nimport * as styled from './styles';\r\nimport { connect } from 'react-redux';\r\nimport Input from '../../components/Input/Input';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { AppState } from \"~/index\";\r\n\r\ninterface StartPageProps {\r\n}\r\n\r\ninterface StateProps {\r\n    settings: any, //TODO\r\n    loading: boolean,\r\n    apiURL: string,\r\n}\r\n\r\ninterface DispatchProps {\r\n    init: () => void,\r\n    generateURL: () => void,\r\n    initQuiz: () => void,\r\n    changeSetting: (setting: string, value: string) => void,\r\n}\r\n\r\ntype Props = StartPageProps & StateProps & DispatchProps;\r\n\r\nconst StartPage: React.FC<Props> = ({init, settings, loading, changeSetting, generateURL, initQuiz}) => {\r\n    const settingInputs = loading === true ? <Spinner /> : (\r\n        <styled.settingInputs>\r\n            <Input name=\"amount\" label=\"Question count\" options={settings.amount} onChange={changeSetting} />\r\n            <Input name=\"category\" label=\"Category\" options={settings.category.map(obj => obj.name)} onChange={changeSetting} />\r\n            <Input name=\"type\" label=\"Type\" options={settings.type} onChange={changeSetting} />\r\n            <Input name=\"difficulty\" label=\"Dificulity\" options={settings.difficulty} onChange={changeSetting} />\r\n        </styled.settingInputs>\r\n    );\r\n\r\n    useEffect(() => {\r\n        init();\r\n    },[init]);\r\n\r\n    const handleStartButtonClick = () => {\r\n        generateURL();\r\n        initQuiz();\r\n    }\r\n\r\n    return (\r\n        <styled.StartPage>\r\n            <styled.Menu>\r\n                <styled.Title>Quizer</styled.Title>\r\n                <styled.SubTitle>\r\n                    <p>Quiz generator with use of Trivia API opentdb.com</p>\r\n                    <p>created by Jacek Smetek</p>\r\n                </styled.SubTitle>\r\n                {settingInputs}\r\n            </styled.Menu>\r\n            <styled.Button to=\"/quiz\" onClick={handleStartButtonClick}>\r\n                Start\r\n            </styled.Button>\r\n        </styled.StartPage>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ startPage }: AppState): StateProps => {\r\n    return {\r\n        settings: startPage.settings.available,\r\n        loading: startPage.loading,\r\n        apiURL: startPage.settings.apiURL,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch): DispatchProps => {\r\n    return {\r\n        init: () => dispatch(actions.init()),\r\n        generateURL: () => dispatch(actions.generateURL()),\r\n        initQuiz: () => dispatch(actions.initQuiz()),\r\n        changeSetting: (setting, value) => dispatch(actions.setSetting(setting, value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StartPage);","import styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport const Background = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(-135deg, #FF9579,#FFCEC1);    \r\n    text-align: left;\r\n`\r\n\r\nexport const Icon = styled(FontAwesomeIcon)`\r\n    font-size: 2rem;\r\n    margin: 1rem;\r\n    color: #125271;\r\n`","import React from 'react'\r\nimport * as styled from './styles'\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '~/store/actions/index';\r\n\r\ninterface DispatchProps {\r\n    quit: () => void,\r\n}\r\n\r\ntype Props = DispatchProps\r\n\r\nconst Background: React.FC<Props> = ({quit}) => (\r\n    <styled.Background>\r\n        <Link to=\"/\" onClick={quit}>\r\n            <styled.Icon icon={faHome}/>\r\n        </Link>\r\n    </styled.Background>\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch ): DispatchProps => {\r\n    return {\r\n        quit: () => dispatch(actions.quizQuit()),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Background);","import styled from \"styled-components\";\r\n\r\nexport const Quiz = styled.div`\r\n    position: relative;\r\n    align-self: center;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const Questions = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    width: 80%;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Question = styled.div`\r\n    position: relative;\r\n    height: 40vh;\r\n    background: white;\r\n    border-radius: 50px;\r\n    box-shadow: 2px 2px 10px 2px rgba(0,0,0,0.25);\r\n    flex: 6;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const QuestionHeader = styled.h1`\r\n   padding: 1.5rem;\r\n`;\r\n\r\nexport const CategoryLabel = styled.h3`\r\n    font-size: 1rem;\r\n    padding: 0.5rem;\r\n    padding-bottom: 2rem;   \r\n    font-style: italic; \r\n`;\r\n\r\nexport const AnswersContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const Score = styled.div`\r\n    display: block;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    margin: 1rem;\r\n`;","import styled from 'styled-components';\r\n\r\ninterface AnswerProps {\r\n    isSelected: boolean,\r\n    showAnswer: boolean,\r\n    isCorrect: boolean,\r\n}\r\n\r\nexport const Answer = styled.div<AnswerProps>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    padding: 15px;\r\n    cursor: pointer;\r\n    color: ${props => props.isSelected || (props.showAnswer && props.isCorrect) ? 'white' : 'inherit' };\r\n    background: ${props => props.isSelected \r\n        ? props.showAnswer\r\n            ? props.isCorrect ? 'green' : 'red'\r\n            : `#125271` \r\n        : props.showAnswer\r\n            ? props.isCorrect ? 'green' : 'inherit'\r\n            : 'inherit' };\r\n    :hover {\r\n        background: #b3d8e9;\r\n    }\r\n`;","import React from 'react';\r\nimport * as styled from './styles';\r\n\r\ninterface AnswerProps {\r\n    selected: boolean;\r\n    answer: string;\r\n    correct: boolean;\r\n    ended: boolean;\r\n    onClick: () => void;\r\n}\r\n\r\nconst Answer: React.FC<AnswerProps> = ({selected, onClick, answer, correct, ended}) => {\r\n    const handleClick = () => {\r\n        if(!ended) onClick();\r\n    };\r\n\r\n    return (\r\n    <styled.Answer\r\n        children={answer}\r\n        isSelected={selected}\r\n        isCorrect={correct}\r\n        showAnswer={ended}\r\n        onClick={handleClick} />\r\n    );\r\n};\r\n\r\nexport default Answer;","import React from 'react';\r\nimport * as styled from './styles';\r\nimport { connect } from 'react-redux';\r\nimport Answer from '../Answer/Answer';\r\nimport * as actions from '../../store/actions/quiz';\r\nimport unescape from '@favware/unescape';\r\nimport { Question as IQuiestion } from \"~/store/reducers/quiz\";\r\nimport { AppState } from \"~/index\";\r\n\r\ninterface QuestionProps {\r\n    id: number;\r\n}\r\n\r\ninterface StateProps {\r\n    questions: IQuiestion[],\r\n    totalQuestions: number,\r\n    correctAnswers: number[],\r\n    questionsPicked: number[],\r\n    ended: boolean,\r\n};\r\n\r\ninterface DispatchProps {\r\n    pickAnswer: (index: number, newPick: number) => void,\r\n};\r\n\r\ntype Props = StateProps & QuestionProps & DispatchProps;\r\n\r\nconst Question: React.FC<Props> = (props) => {\r\n    const { totalQuestions, questions, questionsPicked, correctAnswers, ended } = props;\r\n\r\n    const questionId = props.id - 1;\r\n    const question = questions[questionId];\r\n    const correctAnswerId = correctAnswers[questionId];\r\n    const selectedAnswerId = questionsPicked[questionId];\r\n    const allAnswers = [...question.incorrect_answers];\r\n    allAnswers.splice(correctAnswerId, 0, question.correct_answer);\r\n\r\n    const header = `Question ${questionId + 1}/${totalQuestions}`;\r\n    const categoryLabel = `Category: ${question.category}`;\r\n    const scoreLabel = correctAnswerId === selectedAnswerId ? 'GREAT!' : 'BAD LUCK';\r\n\r\n    const handleAnswerPick = (answerId: number) => {\r\n        return () => props.pickAnswer(questionId, answerId)\r\n    }\r\n\r\n    return (\r\n        <styled.Question>\r\n            <styled.QuestionHeader>{header}</styled.QuestionHeader>\r\n            <styled.CategoryLabel>{categoryLabel}</styled.CategoryLabel>\r\n            <p>{unescape(question.question)}</p>\r\n            <styled.AnswersContainer>\r\n                {allAnswers.map((answer, i) => (\r\n                    <Answer\r\n                        key={i}\r\n                        answer={unescape(answer)}\r\n                        selected={selectedAnswerId === i}\r\n                        onClick={handleAnswerPick(i)}\r\n                        ended={ended}\r\n                        correct={correctAnswerId === i}\r\n                    />\r\n                ))}\r\n            </styled.AnswersContainer>\r\n            {!ended ? null\r\n                : <styled.Score>{scoreLabel}</styled.Score>}\r\n        </styled.Question>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ quiz }: AppState): StateProps => {\r\n    return {\r\n        questions: [...quiz.questions.all],\r\n        totalQuestions: quiz.questions.amount,\r\n        correctAnswers: [...quiz.answers.correct],\r\n        questionsPicked: [...quiz.answers.picked],\r\n        ended: quiz.finished,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch ): DispatchProps => {\r\n    return {\r\n        pickAnswer: (index, newPick) => dispatch(actions.pickAnswer(index, newPick))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);","import styled from 'styled-components';\r\n\r\ninterface ArrowLinkProps {\r\n    disable: boolean,\r\n};\r\n\r\nexport const Arrow = styled.div<ArrowLinkProps>`\r\n    color: ${props => props.disable ? \"rgba(80,80,80,0.2)\" : \"inherit\"};\r\n    font-size: 4rem;\r\n    flex: 1;\r\n    cursor: ${props => props.disable ? \"not-allowed\" : \"pointer\" };\r\n`;","import React from 'react';\r\nimport * as styled from './styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport enum ArrowDirection { Left, Right}\r\n\r\ninterface ArrowProps {\r\n    direction: ArrowDirection,\r\n    disable: boolean,\r\n    onClick: () => void,\r\n}\r\n\r\ntype Props = ArrowProps;\r\n\r\nconst Arrow: React.FC<Props> = ({direction, disable, onClick }) => {\r\n    const isLeft = direction === ArrowDirection.Left;\r\n    const icon = isLeft ? faChevronLeft : faChevronRight;\r\n    const handleClick = () => {\r\n        if(!disable) {\r\n            onClick();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <styled.Arrow onClick={handleClick} disable={disable}>\r\n            <FontAwesomeIcon icon={icon}/>\r\n        </styled.Arrow>\r\n    );\r\n};\r\n\r\nexport default Arrow;","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.div`\r\n    color: inherit;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    background: white;\r\n    padding: 20px 50px;    \r\n    border-radius: 25px;\r\n    font-weight: bold;\r\n    font-size: 2rem;\r\n    box-shadow: 2px 2px 10px 2px rgba(0,0,0,0.25);\r\n    transition: transform 0.25s;\r\n    margin: 2rem;\r\n    :hover {\r\n        transform: scale(1.2,1.2);    \r\n    }\r\n`;","import React from 'react';\r\nimport * as styled from './styles';\r\n\r\ninterface ButtonProps {\r\n    label: string,\r\n    onClick: () => void,\r\n};\r\n\r\nconst Button: React.FC<ButtonProps> = props => {\r\n    return (\r\n        <styled.Button\r\n            children={props.label}\r\n            onClick={props.onClick} />\r\n    )\r\n}\r\n\r\nexport default Button;","import styled, { keyframes } from 'styled-components';\r\n\r\nexport const Summary = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 80%;\r\n    align-items: center; \r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    padding: 1rem;\r\n    border-radius: 3rem; \r\n    background: white;\r\n    box-shadow: 2px 2px 10px 2px rgba(0,0,0,0.25);\r\n`;\r\n\r\nconst showoff = keyframes`\r\n    0%{\r\n        transform: scale(0,0);\r\n    }\r\n    100%{\r\n        transform: scale(1,1)\r\n    }\r\n`;\r\n\r\nexport const Percentage = styled.h1`\r\n    font-size: 6rem;\r\n    margin: 0;\r\n    padding: 0;\r\n    animation: ${showoff} 0.5s cubic-bezier(0, 0, 0.35, 2.41) forwards;\r\n`;\r\n\r\nexport const Score = styled.h2`\r\n    margin-bottom: 1rem;\r\n`\r\n\r\nexport const OptionsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;","import styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport const Option = styled(Link)`\r\n    padding: 0 2rem;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    :hover {\r\n        color:red;\r\n    }\r\n`;\r\n\r\nexport const Icon = styled(FontAwesomeIcon)`\r\n    font-size: 2rem;\r\n    margin-top: 1rem;\r\n`;","import React from 'react';\r\nimport * as styled from './styles'\r\nimport { IconDefinition } from \"@fortawesome/fontawesome-common-types\";\r\n\r\ninterface Option {\r\n    icon: IconDefinition,\r\n    link: string,\r\n    label: string,\r\n    onClick? : () => void,\r\n}\r\n\r\nconst Option: React.FC<Option> = ({icon, link, label, onClick}) => {\r\n    return (\r\n        <styled.Option to={link} onClick={onClick} >\r\n            <styled.Icon icon={icon} />\r\n            <h3> {label} </h3>\r\n        </styled.Option>\r\n    )\r\n}\r\n\r\nexport default Option;","import React from 'react';\r\nimport * as styled from './styles';\r\nimport { connect } from 'react-redux';\r\nimport Option from '../Option/Option';\r\nimport { faBackward, faUndo, faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport * as actions from '../../store/actions';\r\nimport { AppState } from \"~/index\";\r\n\r\ninterface StateProps {\r\n    finished: boolean,\r\n    percentage: number,\r\n    score: number,\r\n    max: number,\r\n}\r\n\r\ninterface DispatchProps {\r\n    quit: () => void,\r\n    initQuiz: () => void,\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nconst Summary: React.FC<Props> = props => {\r\n    const handleTryAgainButton = () => {\r\n        props.initQuiz();\r\n    }\r\n\r\n    const handleHomeButton = () => {\r\n        props.quit();\r\n    }\r\n\r\n    return (\r\n    <styled.Summary>        \r\n        <styled.Container>\r\n            <styled.Percentage>{props.percentage}%</styled.Percentage>\r\n            <styled.Score>{props.score}/{props.max}</styled.Score>\r\n            <styled.OptionsContainer>\r\n                <Option link={\"/quiz\"} icon={faBackward} label=\"Review\"/>\r\n                <Option link={\"/quiz\"} icon={faUndo} label=\"Try again\" onClick={handleTryAgainButton} />\r\n                <Option link={\"/\"} icon={faHome} label=\"Home\" onClick={handleHomeButton} />\r\n            </styled.OptionsContainer>\r\n        </styled.Container>\r\n    </styled.Summary>\r\n)};\r\n\r\nconst mapStateToProps = ({quiz}: AppState): StateProps => {\r\n    return {\r\n        finished: quiz.finished,\r\n        percentage: quiz.score.percentage,\r\n        score: quiz.score.correct,\r\n        max: quiz.questions.amount,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch ): DispatchProps => {\r\n    return {\r\n        quit: () => dispatch(actions.quizQuit()),\r\n        initQuiz: () => dispatch(actions.initQuiz()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Summary);","import React, { useState } from 'react';\r\nimport * as styled from './styles';\r\nimport Question from '../../components/Question/Question';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Arrow, { ArrowDirection } from '../../components/UI/Arrow/Arrow';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport { AppState } from '../../index';\r\nimport Summary from \"../../components/Summary/Summary\";\r\n\r\ninterface QuizProps {\r\n}\r\n\r\ninterface StateProps {\r\n    questionsAmount: number,\r\n    quizStarted: boolean,\r\n    quizFinished: boolean,\r\n    ended: boolean,\r\n    dataLoading: boolean,\r\n    isDataAvailable: boolean,\r\n}\r\n\r\ninterface DispatchProps {\r\n    end: () => void,\r\n}\r\n\r\ntype Props = QuizProps & StateProps & DispatchProps;\r\n\r\nconst Quiz: React.FC<Props> = props => {\r\n    const [questionNumber,setQuestionNumber] = useState(1);\r\n    const loading = !(props.quizStarted || props.quizFinished) || props.dataLoading;\r\n    const buttonLabel = props.ended ? \"View score\" : \"Submit\";\r\n\r\n    const handleButtonClick = () => {\r\n        if(!props.ended){\r\n            props.end();\r\n        }\r\n    }\r\n\r\n    const handleNextQuestion = () => {\r\n        setQuestionNumber(questionNumber + 1);\r\n        console.log('questionNumber',questionNumber);\r\n    }\r\n\r\n    const handlePrevQuestion = () => {\r\n        setQuestionNumber(questionNumber - 1);\r\n        console.log('questionNumber',questionNumber);\r\n    }\r\n    \r\n    return (\r\n        <styled.Quiz>\r\n            {!props.isDataAvailable ? <Redirect to=\"/\" /> : null}\r\n            {!props.ended\r\n                ? <styled.Questions>\r\n                    <Arrow\r\n                        disable={questionNumber <= 1}\r\n                        direction={ArrowDirection.Left} \r\n                        onClick={handlePrevQuestion} />\r\n                    { loading \r\n                        ? <Spinner /> \r\n                        : <Question id={questionNumber} />}\r\n                    <Arrow\r\n                        disable={questionNumber >= props.questionsAmount}\r\n                        direction={ArrowDirection.Right} \r\n                        onClick={handleNextQuestion} />\r\n                </styled.Questions>\r\n                : <Summary/> }\r\n            <Button label={buttonLabel} onClick={handleButtonClick} />\r\n        </styled.Quiz>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ quiz, startPage }: AppState): StateProps => {\r\n    return {\r\n        questionsAmount: quiz.questions.amount,\r\n        quizStarted: quiz.started,\r\n        quizFinished: quiz.finished,\r\n        ended: quiz.finished,\r\n        dataLoading: quiz.questions.fetching,\r\n        isDataAvailable: startPage.dataFetched,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch): DispatchProps => {\r\n    return {\r\n        end: () => dispatch(actions.quizEnded()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","import React, { Component } from 'react';\nimport * as styles from './App.css';\nimport Menu from './containers/Menu/Menu';\nimport Background from './components/Background/Background';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Quiz from './containers/Quiz/Quiz';\n\nclass App extends Component {\n  render() {\n    const routes = (\n      <Switch>\n        <Route path=\"/quiz\" exact component={Quiz} />\n        <Route path=\"/\" exact component={Menu} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n    return (\n      <div className={styles.App}>\n        <Background />\n        {routes}\n      </div>\n    );\n  }\n}\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nexport interface Question {\r\n    category: string,\r\n    type: (\"multiple\" | \"boolean\"),\r\n    difficulty: (\"easy\" | \"medium\" | \"hard\"),\r\n    question: string,\r\n    correct_answer: string,\r\n    incorrect_answers: string[],\r\n}\r\n\r\nexport interface QuizState {\r\n    started: boolean,\r\n    finished: boolean,\r\n    questions: {\r\n        all: Question[],\r\n        amount: number,\r\n        fetching: boolean,\r\n    },\r\n    answers: {\r\n        correct: number[];\r\n        picked: number[];\r\n    },\r\n    score: {\r\n        percentage: number,\r\n        correct: number,\r\n    }\r\n};\r\n\r\nconst initialState: QuizState = {\r\n    started: false,\r\n    finished: false,\r\n    questions: {\r\n        all: [{\r\n            category: \"Entertainment: Board Games\",\r\n            type: \"multiple\",\r\n            difficulty: \"easy\",\r\n            question: \"How many pieces are there on the board at the start of a game of chess?\",\r\n            correct_answer: \"32\",\r\n            incorrect_answers: [\"16\", \"20\", \"36\"]\r\n        }],\r\n        amount: 1,\r\n        fetching: true\r\n    },\r\n    answers: {\r\n        correct: [1],\r\n        picked: [-1]\r\n    },\r\n    score: {\r\n        percentage: -1,\r\n        correct: 0\r\n    }\r\n}\r\n\r\nconst shuffleAnswers = (state: QuizState, action) => {\r\n    const { questions } = state;\r\n    let shuffled: any[] = [];\r\n    for (const question in questions.all) {\r\n        const currentQuestion = questions.all[question]; \r\n        const answersAmmount = currentQuestion.incorrect_answers.length + 1;\r\n        const isBoolType = answersAmmount === 2;\r\n        if (isBoolType){\r\n            shuffled.push(currentQuestion.correct_answer === \"True\" ? 0 : 1);\r\n        } else {\r\n            shuffled.push(Math.floor(Math.random() * answersAmmount));\r\n        }\r\n    }\r\n    return { ...state, answers: { correct: shuffled, picked: shuffled.map(() => -1) } }\r\n}\r\n\r\nconst fetchQuestionsStart = (state: QuizState, action) => {\r\n    return { ...state, questions: { ...state.questions, fetching: true }}\r\n}\r\n\r\nconst fetchQuestionsSuccess = (state: QuizState, action) => {\r\n    return { ...state, questions: { ...state.questions, all: action.questions, fetching: false, amount: action.questions.length } }\r\n}\r\n\r\nconst fetchQuestionsFail = (state: QuizState, action) => {\r\n    console.log(action.error)\r\n    return { ...state, questions: { ...state.questions, fetching: false } };\r\n}\r\n\r\nconst quizStarted = (state = initialState, action) => {\r\n    return { ...state, questions: { ...state.questions }, started: true, score: { percentage: -1, correct: 0 } }\r\n}\r\n\r\nconst pickAnswer = (state, action) => {\r\n    state.answers.picked[action.index] = action.answer;\r\n    return { ...state };\r\n}\r\n\r\nconst quizEnded = (state, action) => {\r\n    return { ...state, finished: true, started: false, questions:{ ...state.questions }}\r\n}\r\n\r\nconst quizQuit = (state, action) => {\r\n    return { ...state, finished: false, started: false}\r\n}\r\n\r\nconst calculateScore = (state: QuizState, action: actionTypes.calculateScore): QuizState => {\r\n    const numberOfCorrectAnswers = state.answers.correct.reduce((prevV, currentV, index) => currentV === state.answers.picked[index] ? prevV + 1 : prevV, 0);\r\n    const percentage = Math.round((numberOfCorrectAnswers / state.questions.amount) * 100);\r\n    return { ...state, score: { percentage: percentage, correct: numberOfCorrectAnswers } };\r\n}\r\n\r\nconst reset = (state: QuizState, action: actionTypes.resetQuiz): QuizState => {\r\n    return initialState;\r\n}\r\n\r\nconst reducer = (state = initialState, action: actionTypes.AllActions): QuizState => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_QUESTIONS_START: return fetchQuestionsStart(state, action);\r\n        case actionTypes.FETCH_QUESTIONS_SUCCESS: return fetchQuestionsSuccess(state, action);\r\n        case actionTypes.FETCH_QUESTIONS_FAIL: return fetchQuestionsFail(state, action);\r\n        case actionTypes.QUIZ_STARTED: return quizStarted(state, action);\r\n        case actionTypes.SHUFFLE_ANSWERS: return shuffleAnswers(state, action);\r\n        case actionTypes.PICK_ANSWER: return pickAnswer(state, action);\r\n        case actionTypes.QUIZ_ENDED: return quizEnded(state, action);\r\n        case actionTypes.QUIZ_QUIT: return quizQuit(state, action);\r\n        case actionTypes.CALCULATE_SCORE: return calculateScore(state, action);\r\n        case actionTypes.RESET_QUIZ: return reset(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nexport interface Category {\r\n    name: string, \r\n    id: number\r\n};\r\n\r\nexport interface StartPageState {\r\n    loading: boolean,\r\n    dataFetched: boolean,\r\n    settings: {\r\n        available: {\r\n            amount: string[],\r\n            category: Category[],\r\n            difficulty: string[],\r\n            type: string[],\r\n        },\r\n        selected: {\r\n            amount: string,\r\n            category: string,\r\n            difficulty: string,\r\n            type: string,\r\n        },\r\n        apiURL: string,\r\n    }\r\n}\r\n\r\nconst initialState: StartPageState = {\r\n    loading: false,\r\n    dataFetched: false,\r\n    settings: {\r\n        available: {\r\n            amount: [\"5\", \"10\", \"15\", \"20\", \"50\"],\r\n            category: [\r\n                {\r\n                    name: 'Any Category',\r\n                    id: 0,\r\n                }, // categories should be fetched from https://opentdb.com/api_category.php\r\n            ],\r\n            difficulty: ['Any Dificulity', 'Easy', 'Medium', 'Hard'],\r\n            type: ['Any Type', 'Multiple Choice', 'True / False'],\r\n        },\r\n        selected: {\r\n            amount: \"5\",\r\n            category: 'Any Category',\r\n            difficulty: 'Any Dificulity',\r\n            type: 'Any Type',\r\n        },\r\n        apiURL: \"https://opentdb.com/api.php?amount=5&category=0&type=0&dificulty=0\",\r\n    }\r\n}\r\n\r\nconst fetchCategoriesStart = (state: StartPageState, action: actionTypes.fetchCategoriesStart) => {\r\n    return { ...state, loading: true }\r\n}\r\n\r\nconst fetchCategoriesSuccess = (state: StartPageState, action: actionTypes.fetchCategoriesSuccess) => {\r\n    const settingsWithCategories =\r\n    {\r\n        settings: {\r\n            ...state.settings,\r\n            available: {\r\n                ...state.settings.available,\r\n                category: [{name: 'Any Category',id: 0}].concat(action.categories)\r\n            }\r\n        }\r\n    }\r\n    return { ...state, loading: false, ...settingsWithCategories, dataFetched: true }\r\n}\r\n\r\nconst fetchCategoriesFail = (state: StartPageState, action: actionTypes.fetchCategoriesFail<{}>) => {\r\n    console.log(\"Something went wrong\");\r\n    console.log(action.error);\r\n    return { ...state, loading: false }\r\n}\r\n\r\n\r\nconst setSetting = (state: StartPageState, action: actionTypes.setSetting) => {\r\n    const newSelectedSetting = {\r\n        ...state.settings.selected,\r\n        [action.setting]: action.value\r\n    }\r\n    return { ...state, settings: { ...state.settings, selected: { ...newSelectedSetting } } };\r\n}\r\n\r\nconst resetStartPage = (state: StartPageState, action: actionTypes.resetStartPage) => {\r\n    return initialState;\r\n}\r\n\r\nconst generateUrl = (state: StartPageState, action: actionTypes.generateURL): StartPageState => {\r\n    const categoryID = state.settings.available.category.find(category => category.name === state.settings.selected.category)!.id;\r\n    const amount = state.settings.selected.amount;    \r\n    const difficulty = [\"0\", \"easy\", \"medium\", \"hard\"][state.settings.available.difficulty.indexOf(state.settings.selected.difficulty)];\r\n    const type = [\"0\",\"multiple\",\"boolean\"][state.settings.available.type.indexOf(state.settings.selected.type)];    \r\n    const apiURL = `https://opentdb.com/api.php?amount=${amount}&category=${categoryID}&type=${type}&dificulty=${difficulty}`;\r\n    return {...state, settings: {...state.settings, apiURL: apiURL}};\r\n}\r\n\r\nconst reducer = (state = initialState, action: actionTypes.StartPageActions): StartPageState => {\r\n    switch (action.type) {        \r\n        case actionTypes.FETCH_CATEGORIES_START: return fetchCategoriesStart(state, action);\r\n        case actionTypes.FETCH_CATEGORIES_SUCCESS: return fetchCategoriesSuccess(state, action);\r\n        case actionTypes.FETCH_CATEGORIES_FAIL: return fetchCategoriesFail(state, action);\r\n        case actionTypes.SET_SETTING: return setSetting(state, action);\r\n        case actionTypes.GENERATE_URL: return generateUrl(state,action);\r\n        case actionTypes.RESET_START_PAGE: return resetStartPage(state,action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport quizReducer from './store/reducers/quiz';\nimport startPageReducer from './store/reducers/startPage';\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\n    }\n}\n\nconst composeEnhancers = process.env.NODE_ENV ==='development' \n? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ \n: null || compose;\n\nconst rootReducer = combineReducers({\n    quiz: quizReducer,\n    startPage: startPageReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nexport type AppState = ReturnType<typeof rootReducer>"],"sourceRoot":""}